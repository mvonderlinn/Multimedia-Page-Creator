describe('canvas-container-drop-event-suit', function(){      var mockObj = {     state: 'unnotified',     onCanvasContainerDrop: function() {        this.state = 'notified';     }        };      beforeEach(function() {      mockObj.state='unnotified';   });     it('is notifiing listerens',function(){    expect(mockObj.state).toBe('unnotified');            CanvasContainerDropEvent.subscribe(mockObj);    CanvasContainerDropEvent.trigger();        expect(mockObj.state).toBe('notified');  });    it('is unsubscribing listerens',function(){        expect(mockObj.state).toBe('unnotified');            CanvasContainerDropEvent.unsubscribe(mockObj);    CanvasContainerDropEvent.trigger();        expect(mockObj.state).toBe('unnotified');      });    });